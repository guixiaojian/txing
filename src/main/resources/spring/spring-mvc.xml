<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <context:component-scan base-package="com.tx.controller" />

    <!-- 使用注解驱动：自动配置处理器映射器与处理器适配器 -->
    <!-- <mvc:annotation-driven></mvc:annotation-driven>  -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- 往前台传一个对象，将其转换成json类型 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <ref bean="mappingJackson2HttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <bean id="mappingJackson2HttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html; charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <mvc:annotation-driven />
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 资源映射 , 加载静态资源-->
    <mvc:resources location="/js/" mapping="/js/**"/>

    <!--拦截器注册 -->
    <mvc:interceptors>
        <!--拦截器1 -->
        <mvc:interceptor>
            <!--拦截不同的controller方法  -->
            <!-- <mvc:mapping path="/users/search"/>
            <mvc:mapping path="/users/updatepwd"/>
            <mvc:mapping path="/users/search"/> -->
           <!-- <mvc:mapping path="/users/**"/>-->

            <!--在使用通配符的过程中 排除指定拦截 -->
           <!-- <mvc:exclude-mapping path="/users/search"/>-->

            <!--通配符  拦截子节点和孙节点 -->
            <mvc:mapping path="/**"/>
            <bean class="com.tx.interceptor.DefaultInteceptor"></bean>
        </mvc:interceptor>

        <!--拦截器2 -->
       <!-- <mvc:interceptor>
            <mvc:mapping path="/users/**"/>
            <bean class="com.tx.interceptor.DefaultInteceptor"></bean>
        </mvc:interceptor>-->
    </mvc:interceptors>
</beans>